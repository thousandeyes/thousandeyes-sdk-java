/*
 * Endpoint Test Results API
 * Retrieve results for scheduled and dynamic tests on endpoint agents.
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.sdk.endpoint.tests.results.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.thousandeyes.sdk.endpoint.tests.results.model.ProcessMetrics;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * ApplicationMetrics
 */
@JsonPropertyOrder({
  ApplicationMetrics.JSON_PROPERTY_NAME,
  ApplicationMetrics.JSON_PROPERTY_TOTAL_CPU,
  ApplicationMetrics.JSON_PROPERTY_TOTAL_MEMORY_PERCENTAGE,
  ApplicationMetrics.JSON_PROPERTY_TOTAL_MEMORY_BYTES,
  ApplicationMetrics.JSON_PROPERTY_PROCESSES
})
@jakarta.annotation.Generated(value = "com.thousandeyes.api.codegen.ThousandeyesJavaGenerator")
public class ApplicationMetrics {
  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_TOTAL_CPU = "totalCpu";
  private Double totalCpu;

  public static final String JSON_PROPERTY_TOTAL_MEMORY_PERCENTAGE = "totalMemoryPercentage";
  private Double totalMemoryPercentage;

  public static final String JSON_PROPERTY_TOTAL_MEMORY_BYTES = "totalMemoryBytes";
  private Long totalMemoryBytes;

  public static final String JSON_PROPERTY_PROCESSES = "processes";
  private List<ProcessMetrics> processes = new ArrayList<>();

  public ApplicationMetrics() { 
  }

  public ApplicationMetrics name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the application.
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public ApplicationMetrics totalCpu(Double totalCpu) {
    this.totalCpu = totalCpu;
    return this;
  }

   /**
   * The total CPU usage by all application processes.
   * @return totalCpu
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_CPU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTotalCpu() {
    return totalCpu;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_CPU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalCpu(Double totalCpu) {
    this.totalCpu = totalCpu;
  }


  public ApplicationMetrics totalMemoryPercentage(Double totalMemoryPercentage) {
    this.totalMemoryPercentage = totalMemoryPercentage;
    return this;
  }

   /**
   * The total percentage of memory used by all application processes.
   * @return totalMemoryPercentage
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_MEMORY_PERCENTAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getTotalMemoryPercentage() {
    return totalMemoryPercentage;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_MEMORY_PERCENTAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalMemoryPercentage(Double totalMemoryPercentage) {
    this.totalMemoryPercentage = totalMemoryPercentage;
  }


  public ApplicationMetrics totalMemoryBytes(Long totalMemoryBytes) {
    this.totalMemoryBytes = totalMemoryBytes;
    return this;
  }

   /**
   * The total memory in bytes used by all application processes.
   * @return totalMemoryBytes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TOTAL_MEMORY_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getTotalMemoryBytes() {
    return totalMemoryBytes;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_MEMORY_BYTES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTotalMemoryBytes(Long totalMemoryBytes) {
    this.totalMemoryBytes = totalMemoryBytes;
  }


  public ApplicationMetrics processes(List<ProcessMetrics> processes) {
    this.processes = processes;
    return this;
  }

  public ApplicationMetrics addProcessesItem(ProcessMetrics processesItem) {
    if (this.processes == null) {
      this.processes = new ArrayList<>();
    }
    this.processes.add(processesItem);
    return this;
  }

   /**
   * A list of application processes.
   * @return processes
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PROCESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<ProcessMetrics> getProcesses() {
    return processes;
  }


  @JsonProperty(JSON_PROPERTY_PROCESSES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setProcesses(List<ProcessMetrics> processes) {
    this.processes = processes;
  }


  /**
   * Return true if this ApplicationMetrics object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationMetrics applicationMetrics = (ApplicationMetrics) o;
    return Objects.equals(this.name, applicationMetrics.name) &&
        Objects.equals(this.totalCpu, applicationMetrics.totalCpu) &&
        Objects.equals(this.totalMemoryPercentage, applicationMetrics.totalMemoryPercentage) &&
        Objects.equals(this.totalMemoryBytes, applicationMetrics.totalMemoryBytes) &&
        Objects.equals(this.processes, applicationMetrics.processes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, totalCpu, totalMemoryPercentage, totalMemoryBytes, processes);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationMetrics {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    totalCpu: ").append(toIndentedString(totalCpu)).append("\n");
    sb.append("    totalMemoryPercentage: ").append(toIndentedString(totalMemoryPercentage)).append("\n");
    sb.append("    totalMemoryBytes: ").append(toIndentedString(totalMemoryBytes)).append("\n");
    sb.append("    processes: ").append(toIndentedString(processes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

