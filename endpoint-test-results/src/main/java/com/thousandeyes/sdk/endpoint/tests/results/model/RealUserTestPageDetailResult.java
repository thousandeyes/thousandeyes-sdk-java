/*
 * Endpoint Test Results API
 * Retrieve results for scheduled and dynamic tests on endpoint agents.
 *
 * The version of the OpenAPI document: 7.0.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.sdk.endpoint.tests.results.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.thousandeyes.sdk.endpoint.tests.results.model.SelfLinks;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * RealUserTestPageDetailResult
 */
@JsonPropertyOrder({
  RealUserTestPageDetailResult.JSON_PROPERTY_HAR,
  RealUserTestPageDetailResult.JSON_PROPERTY_LINKS
})
@jakarta.annotation.Generated(value = "com.thousandeyes.api.codegen.ThousandeyesJavaGenerator")
public class RealUserTestPageDetailResult {
  public static final String JSON_PROPERTY_HAR = "har";
  private Object har;

  public static final String JSON_PROPERTY_LINKS = "_links";
  private SelfLinks links;

  public RealUserTestPageDetailResult() { 
  }

  public RealUserTestPageDetailResult har(Object har) {
    this.har = har;
    return this;
  }

   /**
   * A HAR object according to the [HTTP Archive 1.2 specifications](http://www.softwareishard.com/blog/har-12-spec/), with an additional &#x60;systemMetrics&#x60; property.
   * @return har
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_HAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getHar() {
    return har;
  }


  @JsonProperty(JSON_PROPERTY_HAR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setHar(Object har) {
    this.har = har;
  }


  public RealUserTestPageDetailResult links(SelfLinks links) {
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public SelfLinks getLinks() {
    return links;
  }


  @JsonProperty(JSON_PROPERTY_LINKS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLinks(SelfLinks links) {
    this.links = links;
  }


  /**
   * Return true if this RealUserTestPageDetailResult object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RealUserTestPageDetailResult realUserTestPageDetailResult = (RealUserTestPageDetailResult) o;
    return Objects.equals(this.har, realUserTestPageDetailResult.har) &&
        Objects.equals(this.links, realUserTestPageDetailResult.links);
  }

  @Override
  public int hashCode() {
    return Objects.hash(har, links);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RealUserTestPageDetailResult {\n");
    sb.append("    har: ").append(toIndentedString(har)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

