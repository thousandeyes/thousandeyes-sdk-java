/*
 * Endpoint Tests API
 *  Manage endpoint agent dynamic and scheduled tests using the Endpoint Tests API. 
 *
 * The version of the OpenAPI document: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.api.endpoint.tests;

import com.thousandeyes.api.endpoint.tests.model.EndpointHttpServerTest;
import com.thousandeyes.api.endpoint.tests.model.EndpointHttpServerTestRequest;
import com.thousandeyes.api.endpoint.tests.model.EndpointHttpTestUpdate;
import com.thousandeyes.api.endpoint.tests.model.Error;
import com.thousandeyes.api.endpoint.tests.model.GetEndpointHttpserverTestsList200Response;
import java.net.URI;
import com.thousandeyes.api.endpoint.tests.model.UnauthorizedError;
import com.thousandeyes.api.endpoint.tests.model.ValidationError;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import com.fasterxml.jackson.core.JsonProcessingException;

import com.fasterxml.jackson.databind.ObjectMapper;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * Request and Response model deserialization tests for ScheduledTestsHttpServerApi
 */
public class ScheduledTestsHttpServerApiTest {
    // private final ScheduledTestsHttpServerApi api = new ScheduledTestsHttpServerApi();
    private final ObjectMapper mapper = com.thousandeyes.api.serialization.JSON.getDefault()
                                                                               .getMapper();
    
    /**
     * Delete HTTP server scheduled test
     * <p>
     * Deletes an HTTP server endpoint scheduled test.
     *
     * @throws JsonProcessingException if the deserialization fails
     */
    @Disabled
    @Test
    public void deleteEndpointHttpServerTestRequestAndResponseDeserializationTest()
            throws JsonProcessingException 
    {

    }
    
    /**
     * Retrieves HTTP server endpoint scheduled test
     * <p>
     * Retrieves details of an HTTP Server endpoint scheduled test.
     *
     * @throws JsonProcessingException if the deserialization fails
     */
    
    @Test
    public void getEndpointHttpserverTestDetailRequestAndResponseDeserializationTest()
            throws JsonProcessingException 
    {

        String responseBodyJson = """
                {
                  "verifyCertificate" : false,
                  "sslVersion" : "Auto",
                  "useNtlm" : false,
                  "httpTimeLimit" : 5000,
                  "userAgent" : "curl",
                  "type" : "http-server",
                  "url" : "www.example.com",
                  "postBody" : "body",
                  "followRedirects" : true,
                  "contentRegex" : "(regex)+",
                  "interval" : 120,
                  "hasPathTraceInSession" : true,
                  "httpTargetTime" : 100,
                  "username" : "username",
                  "sslVersionId" : "0"
                }
                                  """;
        EndpointHttpServerTest mappedResponse = 
                mapper.readValue(responseBodyJson, EndpointHttpServerTest.class);
        assertNotNull(mappedResponse);
    }
    
    /**
     * List HTTP server endpoint scheduled tests
     * <p>
     * Returns a list of agent to server endpoint scheduled tests configured in ThousandEyes. This list does not contain saved events. 
     *
     * @throws JsonProcessingException if the deserialization fails
     */
    
    @Test
    public void getEndpointHttpserverTestsListRequestAndResponseDeserializationTest()
            throws JsonProcessingException 
    {

        String responseBodyJson = """
                {
                  "tests" : [ {
                    "verifyCertificate" : false,
                    "sslVersion" : "Auto",
                    "useNtlm" : false,
                    "httpTimeLimit" : 5000,
                    "userAgent" : "curl",
                    "type" : "http-server",
                    "url" : "www.example.com",
                    "postBody" : "body",
                    "followRedirects" : true,
                    "contentRegex" : "(regex)+",
                    "interval" : 120,
                    "hasPathTraceInSession" : true,
                    "httpTargetTime" : 100,
                    "username" : "username",
                    "sslVersionId" : "0"
                  }, {
                    "verifyCertificate" : false,
                    "sslVersion" : "Auto",
                    "useNtlm" : false,
                    "httpTimeLimit" : 5000,
                    "userAgent" : "curl",
                    "type" : "http-server",
                    "url" : "www.example.com",
                    "postBody" : "body",
                    "followRedirects" : true,
                    "contentRegex" : "(regex)+",
                    "interval" : 120,
                    "hasPathTraceInSession" : true,
                    "httpTargetTime" : 100,
                    "username" : "username",
                    "sslVersionId" : "0"
                  } ],
                  "_links" : {
                    "self" : {
                      "hreflang" : "hreflang",
                      "templated" : true,
                      "profile" : "profile",
                      "name" : "name",
                      "href" : "https://api.thousandeyes.com/v7/link/to/resource/id",
                      "type" : "type",
                      "deprecation" : "deprecation",
                      "title" : "title"
                    }
                  }
                }
                                  """;
        GetEndpointHttpserverTestsList200Response mappedResponse = 
                mapper.readValue(responseBodyJson, GetEndpointHttpserverTestsList200Response.class);
        assertNotNull(mappedResponse);
    }
    
    /**
     * Create HTTP server endpoint scheduled test
     * <p>
     * Creates a new HTTP server endpoint test in ThousandEyes, using properties specified in the POST data. Please note that only users with Account Admin privileges have the authorization to create new tests; regular users are restricted from using POST-based methods. 
     *
     * @throws JsonProcessingException if the deserialization fails
     */
    
    @Test
    public void postEndpointHttpserverTestRequestAndResponseDeserializationTest()
            throws JsonProcessingException 
    {
        String requestBodyJson = """
                {
                  "interval" : 120
                }
                                 """;
        EndpointHttpServerTestRequest mappedRequest = 
                mapper.readValue(requestBodyJson, EndpointHttpServerTestRequest.class);
        assertNotNull(mappedRequest);

        String responseBodyJson = """
                {
                  "verifyCertificate" : false,
                  "sslVersion" : "Auto",
                  "useNtlm" : false,
                  "httpTimeLimit" : 5000,
                  "userAgent" : "curl",
                  "type" : "http-server",
                  "url" : "www.example.com",
                  "postBody" : "body",
                  "followRedirects" : true,
                  "contentRegex" : "(regex)+",
                  "interval" : 120,
                  "hasPathTraceInSession" : true,
                  "httpTargetTime" : 100,
                  "username" : "username",
                  "sslVersionId" : "0"
                }
                                  """;
        EndpointHttpServerTest mappedResponse = 
                mapper.readValue(responseBodyJson, EndpointHttpServerTest.class);
        assertNotNull(mappedResponse);
    }
    
    /**
     * Update HTTP server endpoint scheduled test
     * <p>
     * Updates an HTTP server scheduled test. Includes support for  enabling and disabling the test.
     *
     * @throws JsonProcessingException if the deserialization fails
     */
    
    @Test
    public void updateEndpointHttpServerDetailRequestAndResponseDeserializationTest()
            throws JsonProcessingException 
    {
        String requestBodyJson = """
                {
                  "isEnabled" : true,
                  "interval" : 120,
                  "url" : "www.thousandeyes.com",
                  "testName" : "Test name"
                }
                                 """;
        EndpointHttpTestUpdate mappedRequest = 
                mapper.readValue(requestBodyJson, EndpointHttpTestUpdate.class);
        assertNotNull(mappedRequest);

        String responseBodyJson = """
                {
                  "verifyCertificate" : false,
                  "sslVersion" : "Auto",
                  "useNtlm" : false,
                  "httpTimeLimit" : 5000,
                  "userAgent" : "curl",
                  "type" : "http-server",
                  "url" : "www.example.com",
                  "postBody" : "body",
                  "followRedirects" : true,
                  "contentRegex" : "(regex)+",
                  "interval" : 120,
                  "hasPathTraceInSession" : true,
                  "httpTargetTime" : 100,
                  "username" : "username",
                  "sslVersionId" : "0"
                }
                                  """;
        EndpointHttpServerTest mappedResponse = 
                mapper.readValue(responseBodyJson, EndpointHttpServerTest.class);
        assertNotNull(mappedResponse);
    }
    
}
