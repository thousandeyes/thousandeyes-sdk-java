/*
 * Tests API
 * This API supports listing, creating, editing, and deleting Cloud and Enterprise Agent (CEA) based tests. 
 *
 * The version of the OpenAPI document: 7.0.13
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.sdk.tests;

import com.thousandeyes.sdk.tests.model.Error;
import com.thousandeyes.sdk.tests.model.InterfaceGroup;
import com.thousandeyes.sdk.tests.model.InterfaceGroups;
import java.net.URI;
import com.thousandeyes.sdk.tests.model.UnauthorizedError;
import com.thousandeyes.sdk.tests.model.ValidationError;
import static com.thousandeyes.sdk.serialization.JSON.getDefault;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import com.fasterxml.jackson.core.JsonProcessingException;

import com.fasterxml.jackson.databind.DeserializationFeature;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * Request and Response model deserialization tests for PathVisualizationInterfaceGroupsApi
 */
public class PathVisualizationInterfaceGroupsApiTest {
    // private final PathVisualizationInterfaceGroupsApi api = new PathVisualizationInterfaceGroupsApi();
    private final ObjectMapper mapper = getDefault()
            .getMapper()
            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, true);
    
    /**
     * Create interface group for path visualization
     * <p>
     * Creates a new path visualization interface group.
     *
     * @throws JsonProcessingException if the deserialization fails
     */
    
    @Test
    public void createPathVisInterfaceGroupsRequestAndResponseDeserializationTest()
            throws JsonProcessingException 
    {
        String requestBodyJson = """
                {
                  "groupName" : "PathVis Interface Group",
                  "rdnsRegexes" : [ "aggr403b-1.iad3.rackspace.net", "aggr403c-1.iad3.rackspace.net" ],
                  "groupId" : "281474976710706",
                  "ipAddresses" : [ "1.1.1.1", "8.8.8.8" ],
                  "aid" : "1234"
                }
                                 """;
        InterfaceGroup mappedRequest = 
                mapper.readValue(requestBodyJson, InterfaceGroup.class);
        assertNotNull(mappedRequest);

        String responseBodyJson = """
                {
                  "groupName" : "PathVis Interface Group",
                  "rdnsRegexes" : [ "aggr403b-1.iad3.rackspace.net", "aggr403c-1.iad3.rackspace.net" ],
                  "groupId" : "281474976710706",
                  "ipAddresses" : [ "1.1.1.1", "8.8.8.8" ],
                  "aid" : "1234"
                }
                                  """;
        InterfaceGroup mappedResponse = 
                mapper.readValue(responseBodyJson, InterfaceGroup.class);
        assertNotNull(mappedResponse);
    }
    
    /**
     * Delete interface group
     * <p>
     * Deletes a path visualization interface group.
     *
     * @throws JsonProcessingException if the deserialization fails
     */
    @Disabled
    @Test
    public void deletePathVisInterfaceGroupRequestAndResponseDeserializationTest()
            throws JsonProcessingException 
    {

    }
    
    /**
     * List interface groups for path visualization
     * <p>
     * Returns a list of all path visualization interface groups. For more information about interface groups, see https://docs.thousandeyes.com/product-documentation/end-user-monitoring/viewing-data/endpoint-agent-views-reference#grouping.
     *
     * @throws JsonProcessingException if the deserialization fails
     */
    
    @Test
    public void getPathVisInterfaceGroupsRequestAndResponseDeserializationTest()
            throws JsonProcessingException 
    {

        String responseBodyJson = """
                {
                  "pathVisInterfaceGroups" : [ {
                    "groupName" : "PathVis Interface Group",
                    "rdnsRegexes" : [ "aggr403b-1.iad3.rackspace.net", "aggr403c-1.iad3.rackspace.net" ],
                    "groupId" : "281474976710706",
                    "ipAddresses" : [ "1.1.1.1", "8.8.8.8" ],
                    "aid" : "1234"
                  }, {
                    "groupName" : "PathVis Interface Group",
                    "rdnsRegexes" : [ "aggr403b-1.iad3.rackspace.net", "aggr403c-1.iad3.rackspace.net" ],
                    "groupId" : "281474976710706",
                    "ipAddresses" : [ "1.1.1.1", "8.8.8.8" ],
                    "aid" : "1234"
                  } ],
                  "_links" : {
                    "self" : {
                      "hreflang" : "hreflang",
                      "templated" : true,
                      "profile" : "profile",
                      "name" : "name",
                      "href" : "https://api.thousandeyes.com/v7/link/to/resource/id",
                      "type" : "type",
                      "deprecation" : "deprecation",
                      "title" : "title"
                    }
                  }
                }
                                  """;
        InterfaceGroups mappedResponse = 
                mapper.readValue(responseBodyJson, InterfaceGroups.class);
        assertNotNull(mappedResponse);
    }
    
    /**
     * Update interface group
     * <p>
     * Updates a path visualization interface group..
     *
     * @throws JsonProcessingException if the deserialization fails
     */
    
    @Test
    public void updatePathVisInterfaceGroupRequestAndResponseDeserializationTest()
            throws JsonProcessingException 
    {
        String requestBodyJson = """
                {
                  "groupName" : "PathVis Interface Group",
                  "rdnsRegexes" : [ "aggr403b-1.iad3.rackspace.net", "aggr403c-1.iad3.rackspace.net" ],
                  "groupId" : "281474976710706",
                  "ipAddresses" : [ "1.1.1.1", "8.8.8.8" ],
                  "aid" : "1234"
                }
                                 """;
        InterfaceGroup mappedRequest = 
                mapper.readValue(requestBodyJson, InterfaceGroup.class);
        assertNotNull(mappedRequest);

        String responseBodyJson = """
                {
                  "groupName" : "PathVis Interface Group",
                  "rdnsRegexes" : [ "aggr403b-1.iad3.rackspace.net", "aggr403c-1.iad3.rackspace.net" ],
                  "groupId" : "281474976710706",
                  "ipAddresses" : [ "1.1.1.1", "8.8.8.8" ],
                  "aid" : "1234"
                }
                                  """;
        InterfaceGroup mappedResponse = 
                mapper.readValue(responseBodyJson, InterfaceGroup.class);
        assertNotNull(mappedResponse);
    }
    
}
