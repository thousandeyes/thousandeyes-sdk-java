/*
 * Tests API
 * This API allows you to list, create, edit, and delete Network and Application Synthetics tests. 
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.sdk.tests.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * TestVersionHistory
 */
@JsonPropertyOrder({
  TestVersionHistory.JSON_PROPERTY_VERSION_TIMESTAMP,
  TestVersionHistory.JSON_PROPERTY_TEST_ID,
  TestVersionHistory.JSON_PROPERTY_CREATED_BY,
  TestVersionHistory.JSON_PROPERTY_VERSION_ID
})
@jakarta.annotation.Generated(value = "com.thousandeyes.api.codegen.ThousandeyesJavaGenerator")
public class TestVersionHistory {
  public static final String JSON_PROPERTY_VERSION_TIMESTAMP = "versionTimestamp";
  private OffsetDateTime versionTimestamp;

  public static final String JSON_PROPERTY_TEST_ID = "testId";
  private String testId;

  public static final String JSON_PROPERTY_CREATED_BY = "createdBy";
  private String createdBy;

  public static final String JSON_PROPERTY_VERSION_ID = "versionId";
  private String versionId;

  public TestVersionHistory() { 
  }

  public TestVersionHistory versionTimestamp(OffsetDateTime versionTimestamp) {
    this.versionTimestamp = versionTimestamp;
    return this;
  }

   /**
   * Timestamp when this version was created.
   * @return versionTimestamp
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getVersionTimestamp() {
    return versionTimestamp;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_TIMESTAMP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersionTimestamp(OffsetDateTime versionTimestamp) {
    this.versionTimestamp = versionTimestamp;
  }


  public TestVersionHistory testId(String testId) {
    this.testId = testId;
    return this;
  }

   /**
   * The unique identifier of the test.
   * @return testId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTestId() {
    return testId;
  }


  @JsonProperty(JSON_PROPERTY_TEST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTestId(String testId) {
    this.testId = testId;
  }


  public TestVersionHistory createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

   /**
   * The user who created the version.
   * @return createdBy
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCreatedBy() {
    return createdBy;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public TestVersionHistory versionId(String versionId) {
    this.versionId = versionId;
    return this;
  }

   /**
   * The unique identifier for a specific version of the test settings.
   * @return versionId
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getVersionId() {
    return versionId;
  }


  @JsonProperty(JSON_PROPERTY_VERSION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setVersionId(String versionId) {
    this.versionId = versionId;
  }


  /**
   * Return true if this TestVersionHistory object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TestVersionHistory testVersionHistory = (TestVersionHistory) o;
    return Objects.equals(this.versionTimestamp, testVersionHistory.versionTimestamp) &&
        Objects.equals(this.testId, testVersionHistory.testId) &&
        Objects.equals(this.createdBy, testVersionHistory.createdBy) &&
        Objects.equals(this.versionId, testVersionHistory.versionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(versionTimestamp, testId, createdBy, versionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TestVersionHistory {\n");
    sb.append("    versionTimestamp: ").append(toIndentedString(versionTimestamp)).append("\n");
    sb.append("    testId: ").append(toIndentedString(testId)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    versionId: ").append(toIndentedString(versionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

