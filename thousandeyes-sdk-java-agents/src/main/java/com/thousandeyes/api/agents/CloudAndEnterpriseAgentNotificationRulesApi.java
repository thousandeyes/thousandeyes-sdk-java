/*
 * Agents API
 *  ## Overview Manage all agents available to your account in ThousandEyes, including both Cloud and Enterprise Agents.
 *
 * The version of the OpenAPI document: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.thousandeyes.api.agents;

import static com.thousandeyes.api.client.RequestUtil.parameterToPairs;
import static com.thousandeyes.api.client.RequestUtil.urlEncode;

import com.thousandeyes.api.client.ApiClient;
import com.thousandeyes.api.client.ApiException;
import com.thousandeyes.api.client.ApiResponse;
import com.thousandeyes.api.client.ApiRequest;
import org.apache.commons.lang3.tuple.Pair;

import com.thousandeyes.api.agents.model.Error;
import com.thousandeyes.api.agents.model.GetAgentsNotificationRule200Response;
import com.thousandeyes.api.agents.model.GetAgentsNotificationRules200Response;
import com.thousandeyes.api.agents.model.UnauthorizedError;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.io.InputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.net.http.HttpRequest;
import java.nio.channels.Channels;
import java.nio.channels.Pipe;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.time.Duration;

import java.util.ArrayList;
import java.util.StringJoiner;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.function.Consumer;

@jakarta.annotation.Generated(value = "com.thousandeyes.api.codegen.ThousandeyesJavaGenerator", date = "2024-04-22T10:43:50.628946+01:00[Europe/London]")
public class CloudAndEnterpriseAgentNotificationRulesApi {
  private final ApiClient apiClient;

  public CloudAndEnterpriseAgentNotificationRulesApi(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * Retrieve agent notification rule
   * Returns details of an agent notification rule, including agents it is assigned to. 
   * @param notificationRuleId Unique ID for the agent notification rule. (required)
   * @param aid A unique identifier associated with your account group. You can retrieve your &#x60;AccountGroupId&#x60; from the &#x60;/account-groups&#x60; endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response. (optional)
   * @return GetAgentsNotificationRule200Response
   * @throws ApiException if fails to make API call
   */
  public GetAgentsNotificationRule200Response getAgentsNotificationRule(String notificationRuleId, String aid) throws ApiException {
    ApiResponse<GetAgentsNotificationRule200Response> response = getAgentsNotificationRuleWithHttpInfo(notificationRuleId, aid);
    return response.getData();
  }

  /**
   * Retrieve agent notification rule
   * Returns details of an agent notification rule, including agents it is assigned to. 
   * @param notificationRuleId Unique ID for the agent notification rule. (required)
   * @param aid A unique identifier associated with your account group. You can retrieve your &#x60;AccountGroupId&#x60; from the &#x60;/account-groups&#x60; endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response. (optional)
   * @return ApiResponse&lt;GetAgentsNotificationRule200Response&gt;
   * @throws ApiException if fails to make API call
   */
  public ApiResponse<GetAgentsNotificationRule200Response> getAgentsNotificationRuleWithHttpInfo(String notificationRuleId, String aid) throws ApiException {
    getAgentsNotificationRuleValidateRequest(notificationRuleId);

    var requestBuilder = getAgentsNotificationRuleRequestBuilder(notificationRuleId, aid);

    return apiClient.send(requestBuilder.build(), GetAgentsNotificationRule200Response.class);
  }

  private void getAgentsNotificationRuleValidateRequest(String notificationRuleId) throws ApiException {
      // verify the required parameter 'notificationRuleId' is set
      if (notificationRuleId == null) {
        throw new ApiException(400, "Missing the required parameter 'notificationRuleId' when calling getAgentsNotificationRule");
      }
  }

  private ApiRequest.ApiRequestBuilder getAgentsNotificationRuleRequestBuilder(String notificationRuleId, String aid) throws ApiException {
    ApiRequest.ApiRequestBuilder requestBuilder = ApiRequest.builder()
            .method("GET");

    String path = "/v7/agents/notification-rules/{notificationRuleId}"
        .replace("{notificationRuleId}", urlEncode(notificationRuleId.toString()));
    requestBuilder.path(path);

    List<Pair<String, String>> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(parameterToPairs("aid", aid));

    if (!localVarQueryParams.isEmpty()) {
      requestBuilder.queryParams(localVarQueryParams);
    }

    requestBuilder.header("Accept", List.of("application/hal+json, application/problem+json"));
    requestBuilder.header("User-Agent", List.of("ThousandEyesSDK-Java/7.0.0"));
    return requestBuilder;
  }
  /**
   * List agent notification rules
   * Returns a list of all agent notification rules configured under the account.
   * @param aid A unique identifier associated with your account group. You can retrieve your &#x60;AccountGroupId&#x60; from the &#x60;/account-groups&#x60; endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response. (optional)
   * @return GetAgentsNotificationRules200Response
   * @throws ApiException if fails to make API call
   */
  public GetAgentsNotificationRules200Response getAgentsNotificationRules(String aid) throws ApiException {
    ApiResponse<GetAgentsNotificationRules200Response> response = getAgentsNotificationRulesWithHttpInfo(aid);
    return response.getData();
  }

  /**
   * List agent notification rules
   * Returns a list of all agent notification rules configured under the account.
   * @param aid A unique identifier associated with your account group. You can retrieve your &#x60;AccountGroupId&#x60; from the &#x60;/account-groups&#x60; endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response. (optional)
   * @return ApiResponse&lt;GetAgentsNotificationRules200Response&gt;
   * @throws ApiException if fails to make API call
   */
  public ApiResponse<GetAgentsNotificationRules200Response> getAgentsNotificationRulesWithHttpInfo(String aid) throws ApiException {
    getAgentsNotificationRulesValidateRequest();

    var requestBuilder = getAgentsNotificationRulesRequestBuilder(aid);

    return apiClient.send(requestBuilder.build(), GetAgentsNotificationRules200Response.class);
  }

  private void getAgentsNotificationRulesValidateRequest() throws ApiException {
  }

  private ApiRequest.ApiRequestBuilder getAgentsNotificationRulesRequestBuilder(String aid) throws ApiException {
    ApiRequest.ApiRequestBuilder requestBuilder = ApiRequest.builder()
            .method("GET");

    String path = "/v7/agents/notification-rules";
    requestBuilder.path(path);

    List<Pair<String, String>> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(parameterToPairs("aid", aid));

    if (!localVarQueryParams.isEmpty()) {
      requestBuilder.queryParams(localVarQueryParams);
    }

    requestBuilder.header("Accept", List.of("application/hal+json, application/problem+json"));
    requestBuilder.header("User-Agent", List.of("ThousandEyesSDK-Java/7.0.0"));
    return requestBuilder;
  }
}
