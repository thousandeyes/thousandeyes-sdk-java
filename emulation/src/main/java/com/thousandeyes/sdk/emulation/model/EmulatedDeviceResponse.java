/*
 * Emulation API
 * The Emulation API facilitates the retrieval of user-agent strings for HTTP, pageload, and transaction tests. It also enables the retrieval and addition of emulated devices for pageload and transaction tests.  To access Emulation API endpoints, the following permissions are required:  * `Settings Tests Read` for read operations. * `Settings Tests Update` for write operations. 
 *
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.sdk.emulation.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.thousandeyes.sdk.emulation.model.EmulatedDeviceCategory;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * EmulatedDeviceResponse
 */
@JsonPropertyOrder({
  EmulatedDeviceResponse.JSON_PROPERTY_CATEGORY,
  EmulatedDeviceResponse.JSON_PROPERTY_WIDTH,
  EmulatedDeviceResponse.JSON_PROPERTY_HEIGHT,
  EmulatedDeviceResponse.JSON_PROPERTY_NAME,
  EmulatedDeviceResponse.JSON_PROPERTY_CODE_NAME,
  EmulatedDeviceResponse.JSON_PROPERTY_ID,
  EmulatedDeviceResponse.JSON_PROPERTY_AVAILABLE_USER_AGENTS,
  EmulatedDeviceResponse.JSON_PROPERTY_DEFAULT_USER_AGENT_TEMPLATE
})
@jakarta.annotation.Generated(value = "com.thousandeyes.api.codegen.ThousandeyesJavaGenerator")
public class EmulatedDeviceResponse {
  public static final String JSON_PROPERTY_CATEGORY = "category";
  private EmulatedDeviceCategory category;

  public static final String JSON_PROPERTY_WIDTH = "width";
  private Integer width;

  public static final String JSON_PROPERTY_HEIGHT = "height";
  private Integer height;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_CODE_NAME = "codeName";
  private String codeName;

  public static final String JSON_PROPERTY_ID = "id";
  private String id;

  public static final String JSON_PROPERTY_AVAILABLE_USER_AGENTS = "availableUserAgents";
  private List<String> availableUserAgents = new ArrayList<>();

  public static final String JSON_PROPERTY_DEFAULT_USER_AGENT_TEMPLATE = "defaultUserAgentTemplate";
  private String defaultUserAgentTemplate;

  public EmulatedDeviceResponse() { 
  }

  public EmulatedDeviceResponse category(EmulatedDeviceCategory category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public EmulatedDeviceCategory getCategory() {
    return category;
  }


  @JsonProperty(JSON_PROPERTY_CATEGORY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCategory(EmulatedDeviceCategory category) {
    this.category = category;
  }


  public EmulatedDeviceResponse width(Integer width) {
    this.width = width;
    return this;
  }

   /**
   * The width of the display of the emulated device.
   * minimum: 50
   * maximum: 9999
   * @return width
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getWidth() {
    return width;
  }


  @JsonProperty(JSON_PROPERTY_WIDTH)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setWidth(Integer width) {
    this.width = width;
  }


  public EmulatedDeviceResponse height(Integer height) {
    this.height = height;
    return this;
  }

   /**
   * The height of the display of the emulated device.
   * minimum: 50
   * maximum: 9999
   * @return height
  **/
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Integer getHeight() {
    return height;
  }


  @JsonProperty(JSON_PROPERTY_HEIGHT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setHeight(Integer height) {
    this.height = height;
  }


  public EmulatedDeviceResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The device name
   * @return name
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public EmulatedDeviceResponse codeName(String codeName) {
    this.codeName = codeName;
    return this;
  }

   /**
   * A code corresponding to the device name.
   * @return codeName
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getCodeName() {
    return codeName;
  }


  @JsonProperty(JSON_PROPERTY_CODE_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setCodeName(String codeName) {
    this.codeName = codeName;
  }


  public EmulatedDeviceResponse id(String id) {
    this.id = id;
    return this;
  }

   /**
   * ID of the emulated device.
   * @return id
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(String id) {
    this.id = id;
  }


  public EmulatedDeviceResponse availableUserAgents(List<String> availableUserAgents) {
    this.availableUserAgents = availableUserAgents;
    return this;
  }

  public EmulatedDeviceResponse addAvailableUserAgentsItem(String availableUserAgentsItem) {
    if (this.availableUserAgents == null) {
      this.availableUserAgents = new ArrayList<>();
    }
    this.availableUserAgents.add(availableUserAgentsItem);
    return this;
  }

   /**
   * A list of user-agent strings for this emulated device.
   * @return availableUserAgents
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AVAILABLE_USER_AGENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getAvailableUserAgents() {
    return availableUserAgents;
  }


  @JsonProperty(JSON_PROPERTY_AVAILABLE_USER_AGENTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAvailableUserAgents(List<String> availableUserAgents) {
    this.availableUserAgents = availableUserAgents;
  }


  public EmulatedDeviceResponse defaultUserAgentTemplate(String defaultUserAgentTemplate) {
    this.defaultUserAgentTemplate = defaultUserAgentTemplate;
    return this;
  }

   /**
   * The default user-agent template to use for this device.
   * @return defaultUserAgentTemplate
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEFAULT_USER_AGENT_TEMPLATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDefaultUserAgentTemplate() {
    return defaultUserAgentTemplate;
  }


  @JsonProperty(JSON_PROPERTY_DEFAULT_USER_AGENT_TEMPLATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDefaultUserAgentTemplate(String defaultUserAgentTemplate) {
    this.defaultUserAgentTemplate = defaultUserAgentTemplate;
  }


  /**
   * Return true if this EmulatedDeviceResponse object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EmulatedDeviceResponse emulatedDeviceResponse = (EmulatedDeviceResponse) o;
    return Objects.equals(this.category, emulatedDeviceResponse.category) &&
        Objects.equals(this.width, emulatedDeviceResponse.width) &&
        Objects.equals(this.height, emulatedDeviceResponse.height) &&
        Objects.equals(this.name, emulatedDeviceResponse.name) &&
        Objects.equals(this.codeName, emulatedDeviceResponse.codeName) &&
        Objects.equals(this.id, emulatedDeviceResponse.id) &&
        Objects.equals(this.availableUserAgents, emulatedDeviceResponse.availableUserAgents) &&
        Objects.equals(this.defaultUserAgentTemplate, emulatedDeviceResponse.defaultUserAgentTemplate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(category, width, height, name, codeName, id, availableUserAgents, defaultUserAgentTemplate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EmulatedDeviceResponse {\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    width: ").append(toIndentedString(width)).append("\n");
    sb.append("    height: ").append(toIndentedString(height)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    codeName: ").append(toIndentedString(codeName)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    availableUserAgents: ").append(toIndentedString(availableUserAgents)).append("\n");
    sb.append("    defaultUserAgentTemplate: ").append(toIndentedString(defaultUserAgentTemplate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

