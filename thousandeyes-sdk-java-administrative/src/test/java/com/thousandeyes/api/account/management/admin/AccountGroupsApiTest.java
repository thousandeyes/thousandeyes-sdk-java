/*
 * Administrative API
 * ## Overview Manage users, accounts, and account groups in the ThousandEyes platform using the Administrative API. This API provides the following endpoints that define the operations to manage your organization:     * `/account-groups`: Account groups are used to divide an organization into different sections. These endpoints can be used to create, retrieve, update and delete account groups.   * `/users`: Create, retrieve, update and delete users within an organization.    * `/roles`: Create, retrieve and update roles for the current user.    * `/permissions`: Retrieve all assignable permissions. Used in the context of modifying roles.    * `/audit-user-events`: Retrieve all activity log events.    For more information about the administrative models, see [Account Management](https://docs.thousandeyes.com/product-documentation/user-management).
 *
 * The version of the OpenAPI document: 7.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.api.account.management.admin;

import com.thousandeyes.api.account.management.admin.model.AccountGroupRequestBody;
import com.thousandeyes.api.account.management.admin.model.CreateAccountGroup201Response;
import com.thousandeyes.api.account.management.admin.model.Error;
import com.thousandeyes.api.account.management.admin.model.Expand;
import com.thousandeyes.api.account.management.admin.model.GetAccountGroup200Response;
import com.thousandeyes.api.account.management.admin.model.GetAccountGroups200Response;
import java.net.URI;
import com.thousandeyes.api.account.management.admin.model.UnauthorizedError;
import com.thousandeyes.api.account.management.admin.model.ValidationError;
import static org.junit.jupiter.api.Assertions.assertNotNull;

import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import com.fasterxml.jackson.core.JsonProcessingException;

import com.fasterxml.jackson.databind.ObjectMapper;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;


/**
 * Request and Response model deserialization tests for AccountGroupsApi
 */
public class AccountGroupsApiTest {
    // private final AccountGroupsApi api = new AccountGroupsApi();
    private final ObjectMapper mapper = com.thousandeyes.api.serialization.JSON.getDefault()
                                                                               .getMapper();
    
    /**
     * Create account group
     * <p>
     * Creates a new account group. This operation requires the &#x60;Edit all account groups&#x60; permission.  **Note:** Any user assigned to &#x60;All Account Groups&#x60; is automatically assigned to the new account group.
     *
     * @throws JsonProcessingException if the deserialization fails
     */
    
    @Test
    public void createAccountGroupRequestAndResponseDeserializationTest()
            throws JsonProcessingException 
    {
        String requestBodyJson = """
                {
                  "accountGroupName" : "My testing account group",
                  "agents" : [ "105", "719" ]
                }
                                 """;
        AccountGroupRequestBody mappedRequest = 
                mapper.readValue(requestBodyJson, AccountGroupRequestBody.class);
        assertNotNull(mappedRequest);

        String responseBodyJson = """
                {
                  "_links" : {
                    "self" : {
                      "hreflang" : "hreflang",
                      "templated" : true,
                      "profile" : "profile",
                      "name" : "name",
                      "href" : "https://api.thousandeyes.com/v7/link/to/resource/id",
                      "type" : "type",
                      "deprecation" : "deprecation",
                      "title" : "title"
                    }
                  }
                }
                                  """;
        CreateAccountGroup201Response mappedResponse = 
                mapper.readValue(responseBodyJson, CreateAccountGroup201Response.class);
        assertNotNull(mappedResponse);
    }
    
    /**
     * Delete account group
     * <p>
     * Deletes an account group using its ID. This operation requires the following permissions:    * Assign management permissions   * Delete account   * Edit all account groups
     *
     * @throws JsonProcessingException if the deserialization fails
     */
    @Disabled
    @Test
    public void deleteAccountGroupRequestAndResponseDeserializationTest()
            throws JsonProcessingException 
    {

    }
    
    /**
     * Retrieve account group
     * <p>
     * Retrieves detailed information about an account group using its ID.  This operation requires the &#x60;View all account groups settings&#x60; permission.
     *
     * @throws JsonProcessingException if the deserialization fails
     */
    
    @Test
    public void getAccountGroupRequestAndResponseDeserializationTest()
            throws JsonProcessingException 
    {

        String responseBodyJson = """
                {
                  "_links" : {
                    "self" : {
                      "hreflang" : "hreflang",
                      "templated" : true,
                      "profile" : "profile",
                      "name" : "name",
                      "href" : "https://api.thousandeyes.com/v7/link/to/resource/id",
                      "type" : "type",
                      "deprecation" : "deprecation",
                      "title" : "title"
                    }
                  }
                }
                                  """;
        GetAccountGroup200Response mappedResponse = 
                mapper.readValue(responseBodyJson, GetAccountGroup200Response.class);
        assertNotNull(mappedResponse);
    }
    
    /**
     * List account groups
     * <p>
     * Retrieves a list of account groups available to the current user.
     *
     * @throws JsonProcessingException if the deserialization fails
     */
    
    @Test
    public void getAccountGroupsRequestAndResponseDeserializationTest()
            throws JsonProcessingException 
    {

        String responseBodyJson = """
                {
                  "_links" : {
                    "self" : {
                      "hreflang" : "hreflang",
                      "templated" : true,
                      "profile" : "profile",
                      "name" : "name",
                      "href" : "https://api.thousandeyes.com/v7/link/to/resource/id",
                      "type" : "type",
                      "deprecation" : "deprecation",
                      "title" : "title"
                    }
                  },
                  "accountGroups" : [ {
                    "isCurrentAccountGroup" : true,
                    "organizationName" : "organizationName",
                    "isDefaultAccountGroup" : true
                  }, {
                    "isCurrentAccountGroup" : true,
                    "organizationName" : "organizationName",
                    "isDefaultAccountGroup" : true
                  } ]
                }
                                  """;
        GetAccountGroups200Response mappedResponse = 
                mapper.readValue(responseBodyJson, GetAccountGroups200Response.class);
        assertNotNull(mappedResponse);
    }
    
    /**
     * Update account group
     * <p>
     * Updates an account group using its ID. You can modify the account groupâ€™s name or the list of agents assigned to the account group.
     *
     * @throws JsonProcessingException if the deserialization fails
     */
    
    @Test
    public void updateAccountGroupRequestAndResponseDeserializationTest()
            throws JsonProcessingException 
    {
        String requestBodyJson = """
                {
                  "accountGroupName" : "My testing account group",
                  "agents" : [ "105", "719" ]
                }
                                 """;
        AccountGroupRequestBody mappedRequest = 
                mapper.readValue(requestBodyJson, AccountGroupRequestBody.class);
        assertNotNull(mappedRequest);

        String responseBodyJson = """
                {
                  "_links" : {
                    "self" : {
                      "hreflang" : "hreflang",
                      "templated" : true,
                      "profile" : "profile",
                      "name" : "name",
                      "href" : "https://api.thousandeyes.com/v7/link/to/resource/id",
                      "type" : "type",
                      "deprecation" : "deprecation",
                      "title" : "title"
                    }
                  }
                }
                                  """;
        GetAccountGroup200Response mappedResponse = 
                mapper.readValue(responseBodyJson, GetAccountGroup200Response.class);
        assertNotNull(mappedResponse);
    }
    
}
