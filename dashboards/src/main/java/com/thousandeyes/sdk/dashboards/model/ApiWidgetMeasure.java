/*
 * Dashboards API
 * Manage ThousandEyes Dashboards.
 *
 * The version of the OpenAPI document: 7.0.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.thousandeyes.sdk.dashboards.model;

import java.util.Objects;
import java.util.Map;
import java.util.HashMap;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.thousandeyes.sdk.dashboards.model.WidgetMeasureType;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;


/**
 * Determines how to aggregate the the metric.
 */
@JsonPropertyOrder({
  ApiWidgetMeasure.JSON_PROPERTY_TYPE,
  ApiWidgetMeasure.JSON_PROPERTY_PERCENTILE_VALUE
})
@jakarta.annotation.Generated(value = "com.thousandeyes.api.codegen.ThousandeyesJavaGenerator")
public class ApiWidgetMeasure {
  public static final String JSON_PROPERTY_TYPE = "type";
  private WidgetMeasureType type;

  public static final String JSON_PROPERTY_PERCENTILE_VALUE = "percentileValue";
  private Float percentileValue;

  public ApiWidgetMeasure() { 
  }

  public ApiWidgetMeasure type(WidgetMeasureType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WidgetMeasureType getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setType(WidgetMeasureType type) {
    this.type = type;
  }


  public ApiWidgetMeasure percentileValue(Float percentileValue) {
    this.percentileValue = percentileValue;
    return this;
  }

   /**
   * The percentile value to use when &#x60;type &#x3D;&#x3D; NTH_PERCENTILE&#x60;.
   * @return percentileValue
  **/
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PERCENTILE_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Float getPercentileValue() {
    return percentileValue;
  }


  @JsonProperty(JSON_PROPERTY_PERCENTILE_VALUE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPercentileValue(Float percentileValue) {
    this.percentileValue = percentileValue;
  }


  /**
   * Return true if this ApiWidgetMeasure object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApiWidgetMeasure apiWidgetMeasure = (ApiWidgetMeasure) o;
    return Objects.equals(this.type, apiWidgetMeasure.type) &&
        Objects.equals(this.percentileValue, apiWidgetMeasure.percentileValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, percentileValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApiWidgetMeasure {\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    percentileValue: ").append(toIndentedString(percentileValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

