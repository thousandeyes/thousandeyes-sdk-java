/*
 * Endpoint Tests API
 *  Manage endpoint agent dynamic and scheduled tests using the Endpoint Tests API. 
 *
 * The version of the OpenAPI document: 7.0.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.thousandeyes.sdk.endpoint.tests;

import static com.thousandeyes.sdk.client.RequestUtil.parameterToPairs;
import static com.thousandeyes.sdk.client.RequestUtil.urlEncode;

import com.thousandeyes.sdk.client.ApiClient;
import com.thousandeyes.sdk.client.ApiException;
import com.thousandeyes.sdk.client.ApiResponse;
import com.thousandeyes.sdk.client.ApiRequest;
import com.thousandeyes.sdk.utils.Config;
import org.apache.commons.lang3.tuple.Pair;

import com.thousandeyes.sdk.endpoint.tests.model.EndpointAgentToServerTest;
import com.thousandeyes.sdk.endpoint.tests.model.EndpointAgentToServerTestRequest;
import com.thousandeyes.sdk.endpoint.tests.model.EndpointAgentToServerTests;
import com.thousandeyes.sdk.endpoint.tests.model.EndpointNetworkTestUpdate;
import com.thousandeyes.sdk.endpoint.tests.model.Error;
import java.net.URI;
import com.thousandeyes.sdk.endpoint.tests.model.UnauthorizedError;
import com.thousandeyes.sdk.endpoint.tests.model.ValidationError;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;

import java.io.InputStream;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.OutputStream;
import java.net.http.HttpRequest;
import java.nio.channels.Channels;
import java.nio.channels.Pipe;
import java.net.URI;
import java.net.http.HttpClient;
import java.net.http.HttpRequest;
import java.net.http.HttpResponse;
import java.time.Duration;

import java.util.ArrayList;
import java.util.StringJoiner;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.function.Consumer;

@jakarta.annotation.Generated(value = "com.thousandeyes.api.codegen.ThousandeyesJavaGenerator")
public class ScheduledTestsAgentToServerApi {
  private final ApiClient apiClient;

  public ScheduledTestsAgentToServerApi(ApiClient apiClient) {
    this.apiClient = apiClient;
  }

  /**
   * Creates agent to server endpoint scheduled test
   * Creates a new endpoint test in ThousandEyes using properties specified in the POST data. Please note that only Account Admins have the authorization to create new tests; regular users are restricted from using POST-based methods. 
   * @param endpointAgentToServerTestRequest  (required)
   * @param aid A unique identifier associated with your account group. You can retrieve your &#x60;AccountGroupId&#x60; from the &#x60;/account-groups&#x60; endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response. (optional)
   * @return EndpointAgentToServerTest
   * @throws ApiException if fails to make API call
   */
  public EndpointAgentToServerTest createAgentToServerEndpointScheduledTest(EndpointAgentToServerTestRequest endpointAgentToServerTestRequest, String aid) throws ApiException {
    ApiResponse<EndpointAgentToServerTest> response = createAgentToServerEndpointScheduledTestWithHttpInfo(endpointAgentToServerTestRequest, aid);
    return response.getData();
  }

  /**
   * Creates agent to server endpoint scheduled test
   * Creates a new endpoint test in ThousandEyes using properties specified in the POST data. Please note that only Account Admins have the authorization to create new tests; regular users are restricted from using POST-based methods. 
   * @param endpointAgentToServerTestRequest  (required)
   * @param aid A unique identifier associated with your account group. You can retrieve your &#x60;AccountGroupId&#x60; from the &#x60;/account-groups&#x60; endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response. (optional)
   * @return ApiResponse&lt;EndpointAgentToServerTest&gt;
   * @throws ApiException if fails to make API call
   */
  public ApiResponse<EndpointAgentToServerTest> createAgentToServerEndpointScheduledTestWithHttpInfo(EndpointAgentToServerTestRequest endpointAgentToServerTestRequest, String aid) throws ApiException {
    createAgentToServerEndpointScheduledTestValidateRequest(endpointAgentToServerTestRequest);

    var requestBuilder = createAgentToServerEndpointScheduledTestRequestBuilder(endpointAgentToServerTestRequest, aid);

    return apiClient.send(requestBuilder.build(), EndpointAgentToServerTest.class);
  }

  private void createAgentToServerEndpointScheduledTestValidateRequest(EndpointAgentToServerTestRequest endpointAgentToServerTestRequest) throws ApiException {
      // verify the required parameter 'endpointAgentToServerTestRequest' is set
      if (endpointAgentToServerTestRequest == null) {
        throw new ApiException(400, "Missing the required parameter 'endpointAgentToServerTestRequest' when calling createAgentToServerEndpointScheduledTest");
      }
  }

  private ApiRequest.ApiRequestBuilder createAgentToServerEndpointScheduledTestRequestBuilder(EndpointAgentToServerTestRequest endpointAgentToServerTestRequest, String aid) throws ApiException {
    ApiRequest.ApiRequestBuilder requestBuilder = ApiRequest.builder()
            .method("POST");

    String path = "/v7/endpoint/tests/scheduled-tests/agent-to-server";
    requestBuilder.path(path);

    List<Pair<String, String>> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(parameterToPairs("aid", aid));

    if (!localVarQueryParams.isEmpty()) {
      requestBuilder.queryParams(localVarQueryParams);
    }

    requestBuilder.header("Content-Type", List.of("application/json"));
    requestBuilder.header("Accept", List.of("application/hal+json, application/json, application/problem+json"));
    requestBuilder.header("User-Agent", List.of(Config.USER_AGENT));
    requestBuilder.requestBody(endpointAgentToServerTestRequest);
    return requestBuilder;
  }
  /**
   * Delete agent to server scheduled test
   * Deletes an agent to server endpoint scheduled test.
   * @param testId Unique ID of endpoint test. (required)
   * @param aid A unique identifier associated with your account group. You can retrieve your &#x60;AccountGroupId&#x60; from the &#x60;/account-groups&#x60; endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response. (optional)
   * @throws ApiException if fails to make API call
   */
  public void deleteAgentToServerEndpointScheduledTest(String testId, String aid) throws ApiException {
    deleteAgentToServerEndpointScheduledTestWithHttpInfo(testId, aid);
  }

  /**
   * Delete agent to server scheduled test
   * Deletes an agent to server endpoint scheduled test.
   * @param testId Unique ID of endpoint test. (required)
   * @param aid A unique identifier associated with your account group. You can retrieve your &#x60;AccountGroupId&#x60; from the &#x60;/account-groups&#x60; endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response. (optional)
   * @return ApiResponse&lt;Void&gt;
   * @throws ApiException if fails to make API call
   */
  public ApiResponse<Void> deleteAgentToServerEndpointScheduledTestWithHttpInfo(String testId, String aid) throws ApiException {
    deleteAgentToServerEndpointScheduledTestValidateRequest(testId);

    var requestBuilder = deleteAgentToServerEndpointScheduledTestRequestBuilder(testId, aid);

    return apiClient.send(requestBuilder.build(), Void.class);
  }

  private void deleteAgentToServerEndpointScheduledTestValidateRequest(String testId) throws ApiException {
      // verify the required parameter 'testId' is set
      if (testId == null) {
        throw new ApiException(400, "Missing the required parameter 'testId' when calling deleteAgentToServerEndpointScheduledTest");
      }
  }

  private ApiRequest.ApiRequestBuilder deleteAgentToServerEndpointScheduledTestRequestBuilder(String testId, String aid) throws ApiException {
    ApiRequest.ApiRequestBuilder requestBuilder = ApiRequest.builder()
            .method("DELETE");

    String path = "/v7/endpoint/tests/scheduled-tests/agent-to-server/{testId}"
        .replace("{testId}", urlEncode(testId.toString()));
    requestBuilder.path(path);

    List<Pair<String, String>> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(parameterToPairs("aid", aid));

    if (!localVarQueryParams.isEmpty()) {
      requestBuilder.queryParams(localVarQueryParams);
    }

    requestBuilder.header("Accept", List.of("application/json, application/problem+json"));
    requestBuilder.header("User-Agent", List.of(Config.USER_AGENT));
    return requestBuilder;
  }
  /**
   * Retrieve agent to server endpoint scheduled test
   * Retrieves details of an agent to server endpoint scheduled test.
   * @param testId Unique ID of endpoint test. (required)
   * @param aid A unique identifier associated with your account group. You can retrieve your &#x60;AccountGroupId&#x60; from the &#x60;/account-groups&#x60; endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response. (optional)
   * @return EndpointAgentToServerTest
   * @throws ApiException if fails to make API call
   */
  public EndpointAgentToServerTest getAgentToServerEndpointScheduledTest(String testId, String aid) throws ApiException {
    ApiResponse<EndpointAgentToServerTest> response = getAgentToServerEndpointScheduledTestWithHttpInfo(testId, aid);
    return response.getData();
  }

  /**
   * Retrieve agent to server endpoint scheduled test
   * Retrieves details of an agent to server endpoint scheduled test.
   * @param testId Unique ID of endpoint test. (required)
   * @param aid A unique identifier associated with your account group. You can retrieve your &#x60;AccountGroupId&#x60; from the &#x60;/account-groups&#x60; endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response. (optional)
   * @return ApiResponse&lt;EndpointAgentToServerTest&gt;
   * @throws ApiException if fails to make API call
   */
  public ApiResponse<EndpointAgentToServerTest> getAgentToServerEndpointScheduledTestWithHttpInfo(String testId, String aid) throws ApiException {
    getAgentToServerEndpointScheduledTestValidateRequest(testId);

    var requestBuilder = getAgentToServerEndpointScheduledTestRequestBuilder(testId, aid);

    return apiClient.send(requestBuilder.build(), EndpointAgentToServerTest.class);
  }

  private void getAgentToServerEndpointScheduledTestValidateRequest(String testId) throws ApiException {
      // verify the required parameter 'testId' is set
      if (testId == null) {
        throw new ApiException(400, "Missing the required parameter 'testId' when calling getAgentToServerEndpointScheduledTest");
      }
  }

  private ApiRequest.ApiRequestBuilder getAgentToServerEndpointScheduledTestRequestBuilder(String testId, String aid) throws ApiException {
    ApiRequest.ApiRequestBuilder requestBuilder = ApiRequest.builder()
            .method("GET");

    String path = "/v7/endpoint/tests/scheduled-tests/agent-to-server/{testId}"
        .replace("{testId}", urlEncode(testId.toString()));
    requestBuilder.path(path);

    List<Pair<String, String>> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(parameterToPairs("aid", aid));

    if (!localVarQueryParams.isEmpty()) {
      requestBuilder.queryParams(localVarQueryParams);
    }

    requestBuilder.header("Accept", List.of("application/hal+json, application/json, application/problem+json"));
    requestBuilder.header("User-Agent", List.of(Config.USER_AGENT));
    return requestBuilder;
  }
  /**
   * List agent to server endpoint scheduled tests
   * Returns a list of all agent to server endpoint scheduled tests configured in ThousandEyes. This list does not contain saved events. 
   * @param aid A unique identifier associated with your account group. You can retrieve your &#x60;AccountGroupId&#x60; from the &#x60;/account-groups&#x60; endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response. (optional)
   * @return EndpointAgentToServerTests
   * @throws ApiException if fails to make API call
   */
  public EndpointAgentToServerTests getAgentToServerEndpointScheduledTests(String aid) throws ApiException {
    ApiResponse<EndpointAgentToServerTests> response = getAgentToServerEndpointScheduledTestsWithHttpInfo(aid);
    return response.getData();
  }

  /**
   * List agent to server endpoint scheduled tests
   * Returns a list of all agent to server endpoint scheduled tests configured in ThousandEyes. This list does not contain saved events. 
   * @param aid A unique identifier associated with your account group. You can retrieve your &#x60;AccountGroupId&#x60; from the &#x60;/account-groups&#x60; endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response. (optional)
   * @return ApiResponse&lt;EndpointAgentToServerTests&gt;
   * @throws ApiException if fails to make API call
   */
  public ApiResponse<EndpointAgentToServerTests> getAgentToServerEndpointScheduledTestsWithHttpInfo(String aid) throws ApiException {
    getAgentToServerEndpointScheduledTestsValidateRequest();

    var requestBuilder = getAgentToServerEndpointScheduledTestsRequestBuilder(aid);

    return apiClient.send(requestBuilder.build(), EndpointAgentToServerTests.class);
  }

  private void getAgentToServerEndpointScheduledTestsValidateRequest() throws ApiException {
  }

  private ApiRequest.ApiRequestBuilder getAgentToServerEndpointScheduledTestsRequestBuilder(String aid) throws ApiException {
    ApiRequest.ApiRequestBuilder requestBuilder = ApiRequest.builder()
            .method("GET");

    String path = "/v7/endpoint/tests/scheduled-tests/agent-to-server";
    requestBuilder.path(path);

    List<Pair<String, String>> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(parameterToPairs("aid", aid));

    if (!localVarQueryParams.isEmpty()) {
      requestBuilder.queryParams(localVarQueryParams);
    }

    requestBuilder.header("Accept", List.of("application/hal+json, application/json, application/problem+json"));
    requestBuilder.header("User-Agent", List.of(Config.USER_AGENT));
    return requestBuilder;
  }
  /**
   * Update agent to server endpoint scheduled test
   * Updates an agent to server scheduled test. Includes support for  enabling and disabling the test.
   * @param testId Unique ID of endpoint test. (required)
   * @param endpointNetworkTestUpdate  (required)
   * @param aid A unique identifier associated with your account group. You can retrieve your &#x60;AccountGroupId&#x60; from the &#x60;/account-groups&#x60; endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response. (optional)
   * @return EndpointAgentToServerTest
   * @throws ApiException if fails to make API call
   */
  public EndpointAgentToServerTest updateAgentToServerEndpointScheduledTest(String testId, EndpointNetworkTestUpdate endpointNetworkTestUpdate, String aid) throws ApiException {
    ApiResponse<EndpointAgentToServerTest> response = updateAgentToServerEndpointScheduledTestWithHttpInfo(testId, endpointNetworkTestUpdate, aid);
    return response.getData();
  }

  /**
   * Update agent to server endpoint scheduled test
   * Updates an agent to server scheduled test. Includes support for  enabling and disabling the test.
   * @param testId Unique ID of endpoint test. (required)
   * @param endpointNetworkTestUpdate  (required)
   * @param aid A unique identifier associated with your account group. You can retrieve your &#x60;AccountGroupId&#x60; from the &#x60;/account-groups&#x60; endpoint. Note that you must be assigned to the target account group. Specifying this parameter without being assigned to the target account group will result in an error response. (optional)
   * @return ApiResponse&lt;EndpointAgentToServerTest&gt;
   * @throws ApiException if fails to make API call
   */
  public ApiResponse<EndpointAgentToServerTest> updateAgentToServerEndpointScheduledTestWithHttpInfo(String testId, EndpointNetworkTestUpdate endpointNetworkTestUpdate, String aid) throws ApiException {
    updateAgentToServerEndpointScheduledTestValidateRequest(testId, endpointNetworkTestUpdate);

    var requestBuilder = updateAgentToServerEndpointScheduledTestRequestBuilder(testId, endpointNetworkTestUpdate, aid);

    return apiClient.send(requestBuilder.build(), EndpointAgentToServerTest.class);
  }

  private void updateAgentToServerEndpointScheduledTestValidateRequest(String testId, EndpointNetworkTestUpdate endpointNetworkTestUpdate) throws ApiException {
      // verify the required parameter 'testId' is set
      if (testId == null) {
        throw new ApiException(400, "Missing the required parameter 'testId' when calling updateAgentToServerEndpointScheduledTest");
      }
      // verify the required parameter 'endpointNetworkTestUpdate' is set
      if (endpointNetworkTestUpdate == null) {
        throw new ApiException(400, "Missing the required parameter 'endpointNetworkTestUpdate' when calling updateAgentToServerEndpointScheduledTest");
      }
  }

  private ApiRequest.ApiRequestBuilder updateAgentToServerEndpointScheduledTestRequestBuilder(String testId, EndpointNetworkTestUpdate endpointNetworkTestUpdate, String aid) throws ApiException {
    ApiRequest.ApiRequestBuilder requestBuilder = ApiRequest.builder()
            .method("PATCH");

    String path = "/v7/endpoint/tests/scheduled-tests/agent-to-server/{testId}"
        .replace("{testId}", urlEncode(testId.toString()));
    requestBuilder.path(path);

    List<Pair<String, String>> localVarQueryParams = new ArrayList<>();
    localVarQueryParams.addAll(parameterToPairs("aid", aid));

    if (!localVarQueryParams.isEmpty()) {
      requestBuilder.queryParams(localVarQueryParams);
    }

    requestBuilder.header("Content-Type", List.of("application/json"));
    requestBuilder.header("Accept", List.of("application/hal+json, application/json, application/problem+json"));
    requestBuilder.header("User-Agent", List.of(Config.USER_AGENT));
    requestBuilder.requestBody(endpointNetworkTestUpdate);
    return requestBuilder;
  }
}
